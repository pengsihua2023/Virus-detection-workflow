// Enhanced Comprehensive Viral Detection Configuration - Fixed Version
nextflow.enable.dsl=2

// üîß SLURM executor configuration
executor {
    $slurm {
        queueSize = 15
        submitRateLimit = '1sec'
    }
}

// Global parameters
params {
    // Input/Output
    reads = "data/*_{R1,R2}.fastq.gz"
    outdir = "results_viral_enhanced"
    
    // Databases
    viral_genomes = "databases/viral_genomes/complete_precise_human_animal_viruses.fa"
    viral_proteins = "databases/viral_proteins/complete_precise_human_animal_viruses_proteins_diamond.dmnd"
    viral_hmm = "databases/viral_hmm/rvdb-prot.hmm"
    kraken2_db = "databases/viral_genomes/complete_precise_human_animal_viruses_kraken2"
    base_path = "/scratch/sp96859/Meta-genome-data-analysis/Nextflow"
    
    // Resource defaults
    threads = 16
    memory = '64 GB'
    time = '12h'
    publish_mode = 'copy'
}

process {
    // üîß Enhanced SLURM configuration
    executor = 'slurm'
    queue = 'bahl_p'
    clusterOptions = '--ntasks=1'
    
    cpus = 8
    memory = '32 GB'
    time = '6h'
    
    errorStrategy = 'retry'
    maxRetries = 2
    
    // üîß Enhanced environment setup - inherit SLURM environment variables
    beforeScript = '''
    echo "Inheriting enhanced SLURM environment variables..."
    echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:0:50}..."
    
    module load Miniforge3/24.11.3-0
    source $(conda info --base)/etc/profile.d/conda.sh
    conda activate nextflow
    
    export PATH="/home/sp96859/bin:/home/sp96859/.conda/envs/nextflow/bin:$PATH"
    
    echo "Enhanced environment setup completed"
    '''

    // FASTP configuration
    withName: FASTP {
        cpus = 16
        memory = '64 GB'
        time = '4h'
        clusterOptions = '--ntasks=1 --cpus-per-task=16'
    }

    // VIRAL_SCREENING - most critical process
    withName: VIRAL_SCREENING {
        cpus = 16
        memory = '128 GB'
        time = '24h'
        clusterOptions = '--ntasks=1 --cpus-per-task=16'
        
        beforeScript = '''
        echo "=== VIRAL_SCREENING enhanced environment ==="
        
        # Inherit SLURM environment variables
        echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:0:100}..."
        
        module load Miniforge3/24.11.3-0
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate nextflow
        
        export PATH="/home/sp96859/bin:/home/sp96859/.conda/envs/nextflow/bin:/usr/bin:/bin:$PATH"
        
        # Verify critical tools
        echo "=== Tool verification ==="
        echo "BWA: $(which bwa 2>/dev/null || echo 'Not found')"
        echo "seqtk: $(which seqtk 2>/dev/null || echo 'Not found')"
        echo "samtools: $(which samtools 2>/dev/null || echo 'Not found')"
        
        # Test samtools functionality
        if samtools --version >/dev/null 2>&1; then
            echo "‚úÖ samtools working: $(samtools --version | head -1)"
        else
            echo "‚ùå samtools error:"
            samtools --version 2>&1 | head -3
        fi
        
        echo "VIRAL_SCREENING environment: 16 cores, 128GB, 24 hours"
        '''
    }

    // VIRAL_ASSEMBLY configuration
    withName: VIRAL_ASSEMBLY {
        cpus = 16
        memory = '96 GB'
        time = '12h'
        clusterOptions = '--ntasks=1 --cpus-per-task=16'
    }

    // ORF_PREDICTION configuration (matching fixed .nf file)
    withName: ORF_PREDICTION {
        cpus = 8
        memory = '32 GB'
        time = '4h'
        clusterOptions = '--ntasks=1 --cpus-per-task=8'
        
        beforeScript = '''
        echo "=== ORF_PREDICTION environment setup ==="
        
        module load Miniforge3/24.11.3-0
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate nextflow
        
        export PATH="/home/sp96859/bin:/home/sp96859/.conda/envs/nextflow/bin:$PATH"
        
        # Verify PRODIGAL
        if command -v prodigal >/dev/null 2>&1; then
            echo "‚úÖ PRODIGAL: $(which prodigal)"
            prodigal -v 2>&1 | head -1
        else
            echo "‚ö†Ô∏è PRODIGAL not available, attempting installation..."
            conda install -c bioconda prodigal -y
            if command -v prodigal >/dev/null 2>&1; then
                echo "‚úÖ PRODIGAL installation successful"
            else
                echo "‚ùå PRODIGAL installation failed"
            fi
        fi
        
        echo "ORF_PREDICTION environment: 8 cores, 32GB, 4 hours"
        '''
    }

    // DIAMOND_PROTEIN_ANALYSIS configuration (matching fixed .nf file)
    withName: DIAMOND_PROTEIN_ANALYSIS {
        cpus = 16
        memory = '96 GB'
        time = '8h'
        clusterOptions = '--ntasks=1 --cpus-per-task=16'
        
        beforeScript = '''
        echo "=== DIAMOND_PROTEIN_ANALYSIS environment setup ==="
        
        module load Miniforge3/24.11.3-0
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate nextflow
        
        export PATH="/home/sp96859/bin:/home/sp96859/.conda/envs/nextflow/bin:$PATH"
        
        # Verify DIAMOND
        if command -v diamond >/dev/null 2>&1; then
            echo "‚úÖ DIAMOND: $(which diamond)"
            diamond version 2>&1 | head -1
        else
            echo "‚ö†Ô∏è DIAMOND not available, attempting installation..."
            conda install -c bioconda diamond -y
            if command -v diamond >/dev/null 2>&1; then
                echo "‚úÖ DIAMOND installation successful"
            else
                echo "‚ùå DIAMOND installation failed"
            fi
        fi
        
        echo "DIAMOND environment: 16 cores, 96GB, 8 hours"
        '''
    }

    // HMMER_ANALYSIS configuration (matching fixed .nf file)
    withName: HMMER_ANALYSIS {
        cpus = 16
        memory = '128 GB'
        time = '16h'
        clusterOptions = '--ntasks=1 --cpus-per-task=16'
        
        beforeScript = '''
        echo "=== HMMER_ANALYSIS environment setup ==="
        
        module load Miniforge3/24.11.3-0
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate nextflow
        
        export PATH="/home/sp96859/bin:/home/sp96859/.conda/envs/nextflow/bin:$PATH"
        
        # Verify HMMER tools
        echo "Verifying HMMER tools..."
        for tool in hmmscan hmmpress; do
            if command -v $tool >/dev/null 2>&1; then
                echo "‚úÖ $tool: $(which $tool)"
            else
                echo "‚ö†Ô∏è $tool not available, attempting installation..."
                conda install -c bioconda hmmer -y
                break
            fi
        done
        
        # Test HMMER
        if command -v hmmscan >/dev/null 2>&1; then
            hmmscan -h 2>&1 | head -3
            echo "‚úÖ HMMER tools verified"
        else
            echo "‚ùå HMMER installation failed"
        fi
        
        echo "HMMER environment: 16 cores, 128GB, 16 hours"
        '''
    }

    // ABUNDANCE_ESTIMATION configuration (matching fixed .nf file name)
    withName: ABUNDANCE_ESTIMATION {
        cpus = 16
        memory = '128 GB'
        time = '12h'
        clusterOptions = '--ntasks=1 --cpus-per-task=16'
        
        beforeScript = '''
        echo "=== ABUNDANCE_ESTIMATION environment setup ==="
        
        module load Miniforge3/24.11.3-0
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate nextflow
        
        export PATH="/home/sp96859/bin:/home/sp96859/.conda/envs/nextflow/bin:$PATH"
        
        # Verify tools for abundance calculation
        echo "Verifying abundance calculation tools..."
        for tool in bwa samtools bc; do
            if command -v $tool >/dev/null 2>&1; then
                echo "‚úÖ $tool: $(which $tool)"
            else
                echo "‚ö†Ô∏è $tool not available"
            fi
        done
        
        echo "ABUNDANCE_ESTIMATION environment: 16 cores, 128GB, 12 hours"
        '''
    }

    // Kraken2 viral classification process - enhanced configuration
    withName: KRAKEN2_VIRAL_CLASSIFICATION {
        cpus = 16
        memory = '128 GB'
        time = '12h'
        clusterOptions = '--ntasks=1 --cpus-per-task=16'
        
        beforeScript = '''
        echo "=== KRAKEN2_VIRAL_CLASSIFICATION environment setup ==="
        
        # Inherit SLURM environment variables
        echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:0:100}..."
        
        module load Miniforge3/24.11.3-0
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate nextflow
        
        export PATH="/home/sp96859/bin:/home/sp96859/.conda/envs/nextflow/bin:$PATH"
        
        # Verify Kraken2 tool
        echo "Verifying Kraken2 tool..."
        if command -v kraken2 >/dev/null 2>&1; then
            echo "‚úÖ Kraken2: $(which kraken2)"
            kraken2 --version 2>&1 | head -1
        else
            echo "‚ö†Ô∏è Kraken2 not available, attempting installation..."
            conda install -c bioconda kraken2 -y
            if command -v kraken2 >/dev/null 2>&1; then
                echo "‚úÖ Kraken2 installation successful"
            else
                echo "‚ùå Kraken2 installation failed"
            fi
        fi
        
        echo "KRAKEN2 environment: 16 cores, 128GB, 12 hours"
        '''
    }

    // ENHANCED_FINAL_REPORT configuration (matching fixed .nf file)
    withName: ENHANCED_FINAL_REPORT {
        cpus = 8
        memory = '32 GB'
        time = '4h'
        clusterOptions = '--ntasks=1 --cpus-per-task=8'
        
        beforeScript = '''
        echo "=== ENHANCED_FINAL_REPORT environment setup ==="
        
        module load Miniforge3/24.11.3-0
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate nextflow
        
        export PATH="/home/sp96859/bin:/home/sp96859/.conda/envs/nextflow/bin:$PATH"
        export PYTHONPATH="/home/sp96859/.conda/envs/nextflow/lib/python3.12/site-packages:$PYTHONPATH"
        
        # Verify Python and required packages
        echo "Verifying Python environment..."
        python3 --version
        
        # Check pandas availability
        python3 -c "import pandas; print('pandas version:', pandas.__version__)" 2>/dev/null || {
            echo "‚ö†Ô∏è pandas not available, attempting installation..."
            pip install pandas
        }
        
        # Check other useful packages
        for pkg in numpy scipy; do
            python3 -c "import $pkg" 2>/dev/null || {
                echo "‚ö†Ô∏è $pkg not available, attempting installation..."
                pip install $pkg
            }
        done
        
        echo "ENHANCED_FINAL_REPORT environment: 8 cores, 32GB, 4 hours"
        '''
    }
}

